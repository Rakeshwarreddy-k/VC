"use strict";(self.webpackChunkvirtualclient=self.webpackChunkvirtualclient||[]).push([[5455],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=u(n),d=i,g=c["".concat(s,".").concat(d)]||c[d]||m[d]||r;return n?a.createElement(g,l(l({ref:t},p),{},{components:n})):a.createElement(g,l({ref:t},p))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var u=2;u<r;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},1902:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>u});var a=n(7462),i=(n(7294),n(3905));const r={id:"getting-started",sidebar_position:1},l="Getting Started : OpenSSL",o={unversionedId:"guides/getting-started",id:"guides/getting-started",title:"Getting Started : OpenSSL",description:'In this document, we are going to run a "hello-world" version of VirtualClient: benchmark your system\'s crypotography performance, with OpenSSL Speed, using SHA256 algorithm.',source:"@site/docs/guides/1-getting-started.md",sourceDirName:"guides",slug:"/guides/getting-started",permalink:"/VirtualClient/docs/guides/getting-started",draft:!1,editUrl:"https://github.com/microsoft/VirtualClient/edit/main/website/docs/guides/1-getting-started.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"getting-started",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Guides",permalink:"/VirtualClient/docs/category/guides"},next:{title:"Run monitors while benchmarking",permalink:"/VirtualClient/docs/guides/run-monitors"}},s={},u=[{value:"Installation",id:"installation",level:2},{value:"<em>NuGet package</em>",id:"nuget-package",level:4},{value:"<em>Build yourself</em>",id:"build-yourself",level:4},{value:"Run a simple VC profile",id:"run-a-simple-vc-profile",level:2},{value:"Read results and logs",id:"read-results-and-logs",level:2},{value:"Congratulations !!",id:"congratulations-",level:2}],p={toc:u};function m(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"getting-started--openssl"},"Getting Started : OpenSSL"),(0,i.kt)("p",null,'In this document, we are going to run a "hello-world" version of VirtualClient: benchmark your system\'s crypotography performance, with OpenSSL Speed, using SHA256 algorithm.'),(0,i.kt)("h2",{id:"installation"},"Installation"),(0,i.kt)("p",null,'Virtual Client is a self-contained .NET 6 application. "Installation" practically means copying the VirtualClient package into your system. It runs out-of-box on ',(0,i.kt)("a",{parentName:"p",href:"https://github.com/dotnet/core/blob/main/release-notes/6.0/supported-os.md"},"all OS supported by .NET 6"),"."),(0,i.kt)("h4",{id:"nuget-package"},(0,i.kt)("em",{parentName:"h4"},"NuGet package")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"We publish NuGet Package at ",(0,i.kt)("a",{parentName:"li",href:"https://www.nuget.org/packages/VirtualClient"},"https://www.nuget.org/packages/VirtualClient")),(0,i.kt)("li",{parentName:"ul"},"You could download directly from NuGet ",(0,i.kt)("a",{parentName:"li",href:"https://www.nuget.org/api/v2/package/VirtualClient/0.0.5"},"https://www.nuget.org/api/v2/package/VirtualClient/0.0.5")),(0,i.kt)("li",{parentName:"ul"},"You could also use powershell ",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-powershell"},"PM> NuGet\\Install-Package VirtualClient -Version 0.0.5\n"))),(0,i.kt)("li",{parentName:"ul"},"The .nupkg NuGet package is just a .zip file, you can unzip with programs like 7zip, or rename .nupkg to .zip and unzip."),(0,i.kt)("li",{parentName:"ul"},"VC executable could be find in those paths")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-treeview"},"VirtualClient/\n\u251c\u2500\u2500 content/\n|   \u251c\u2500\u2500 linux-arm64\n|   |   \u2514\u2500\u2500 VirtualClient\n|   \u251c\u2500\u2500 linux-x64\n|   |   \u2514\u2500\u2500 VirtualClient\n|   \u251c\u2500\u2500 win-arm64\n|   |   \u2514\u2500\u2500 VirtualClient.exe\n|   \u2514\u2500\u2500 win-x64\n|       \u2514\u2500\u2500 VirtualClient.exe\n\u2514\u2500\u2500 etc.\n")),(0,i.kt)("h4",{id:"build-yourself"},(0,i.kt)("em",{parentName:"h4"},"Build yourself")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"You need to ",(0,i.kt)("a",{parentName:"li",href:"https://dotnet.microsoft.com/en-us/download/dotnet/6.0"},"install .Net SDK 6.0.X")),(0,i.kt)("li",{parentName:"ul"},"Use build script at the root of the repo build.cmd",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"build.cmd\n"))),(0,i.kt)("li",{parentName:"ul"},"You will find VC binary in corresponding arch/runtimes folder. ",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"VirtualClient\\out\\bin\\Debug\\ARM64\\VirtualClient.Main\\net6.0\\linux-arm64\\publish\\VirtualClient\nVirtualClient\\out\\bin\\Debug\\ARM64\\VirtualClient.Main\\net6.0\\win-arm64\\publish\\VirtualClient.exe\nVirtualClient\\out\\bin\\Debug\\x64\\VirtualClient.Main\\net6.0\\linux-x64\\publish\\VirtualClient\nVirtualClient\\out\\bin\\Debug\\x64\\VirtualClient.Main\\net6.0\\win-x64\\publish\\VirtualClient.exe\n"))),(0,i.kt)("li",{parentName:"ul"},"VirtualClient is a self-contained .NET app. When you use VC, you need to copy over the entire ",(0,i.kt)("inlineCode",{parentName:"li"},"/publish/")," folder")),(0,i.kt)("h2",{id:"run-a-simple-vc-profile"},"Run a simple VC profile"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Execute this command")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"sudo ./VirtualClient --profile=GET-STARTED-OPENSSL.json --profile=MONITORS-NONE.json --iterations=1 --packages=https://virtualclient.blob.core.windows.net/packages\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/microsoft/VirtualClient/blob/main/src/VirtualClient/VirtualClient.Main/profiles/GET-STARTED-OPENSSL.json"},(0,i.kt)("inlineCode",{parentName:"a"},"--profile=GET-STARTED-OPENSSL.json"))," tells VC to run a stripped down version of OpenSSL benchmark. With SHA256 algorithm.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"VC supports remote profile, you can reference a url to a json file."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--profile=https://raw.githubusercontent.com/microsoft/VirtualClient/main/src/VirtualClient/VirtualClient.Main/profiles/GET-STARTED-OPENSSL.json")," is equavilent to ",(0,i.kt)("inlineCode",{parentName:"li"},"--profile=GET-STARTED-OPENSSL.json"),"."))),(0,i.kt)("li",{parentName:"ul"},"VirtualClient has a default profile, ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/microsoft/VirtualClient/blob/main/src/VirtualClient/VirtualClient.Main/profiles/MONITORS-NONE.json"},(0,i.kt)("inlineCode",{parentName:"a"},"--profile=MONITORS-NONE.json"))," overrides that behavior in this one-time run."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--iteration=1")," Tells VC to run this profile once. Default behavior is to run profiles repetatively until timeout."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--packages=https://virtualclient.blob.core.windows.net/packages")," defines the packages store that VC will download OpenSSL binary from. Not every workload needs binary download. You can also use your own binary and package store if desired.")),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"In this profile, VC will download OpenSSL binaries onto your system, under ",(0,i.kt)("inlineCode",{parentName:"p"},"/virtualclient/packages/openssl.3.0.0/"),".",(0,i.kt)("br",null),"\nIf prefered, run in a Virtual Machine to avoid those changes to your system.")),(0,i.kt)("h2",{id:"read-results-and-logs"},"Read results and logs"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"You will find three local files under directory ",(0,i.kt)("inlineCode",{parentName:"li"},"/virtualclient/logs/"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"logs\n\u251c\u2500\u2500 events-20221109.log\n\u251c\u2500\u2500 metrics-20221109.log\n\u2514\u2500\u2500 traces-20221109.log\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Metrics.log contains the Metrics captured by the benchmark. Columns ",(0,i.kt)("inlineCode",{parentName:"li"},"metricName"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"metricValue"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"metricUnit")," contain some of the most important information\nfrom a benchmark run.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:"{16,17,18,19}","{16,17,18,19}":!0},'{\n    "timestamp": "2022-11-14T07:26:18.2717145+00:00",\n    "level": "Information",\n    "message": "OpenSSL.ScenarioResult",\n    "agentId": "testuser",\n    "appVersion": "1.6.0.0",\n    "clientId": "testuser",\n    "executionProfileName": "GET-STARTED-OPENSSL.json",\n    "executionProfilePath": "/home/testuser/virtualclient/profiles/GET-STARTED-OPENSSL.json",\n    "executionSystem": null,\n    "experimentId": "6619e311-e3ee-4727-a082-dc61f1fbb44d",\n    "metadata": {"experimentId":"6619e311-e3ee-4727-a082-dc61f1fbb44d","agentId":"testuser"},\n    "metricCategorization": "",\n    "metricDescription": "",\n    "metricMetadata": {},\n    "metricName": "sha256 16-byte",\n    "metricRelativity": "HigherIsBetter",\n    "metricUnit": "kilobytes/sec",\n    "metricValue": 323830.14,\n    "parameters": {"scenario":"SHA256","commandArguments":"speed -elapsed -seconds 10 sha256","packageName":"openssl","tags":"CPU,OpenSSL,Cryptography","profileIteration":1,"profileIterationStartTime":"2022-11-14T07:25:18.1731942Z"},\n    "platformArchitecture": "linux-arm64",\n    "scenarioArguments": "speed -multi 4 -elapsed -seconds 10 sha256",\n    "scenarioEndTime": "2022-11-14T07:26:18.2470775Z",\n    "scenarioName": "OpenSSL Speed",\n    "scenarioStartTime": "2022-11-14T07:25:18.2251103Z",\n    "systemInfo": ...,\n    "tags": "CPU,OpenSSL,Cryptography",\n    "etc": ...\n}\n')),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Traces contains the Messages that VirtualClient logs.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},'Messages like "BenchmarkStart", "BenchmarkStop"'),(0,i.kt)("li",{parentName:"ul"},"Raw output from processes"),(0,i.kt)("li",{parentName:"ul"},"More information logged by VC"))),(0,i.kt)("li",{parentName:"ul"},"Events contains system informations or important system events.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Output from tools like uname, lscpu, lspci")))),(0,i.kt)("admonition",{title:"Reading logs is tedious?",type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"VC is designed for large scale perf testing. Check ",(0,i.kt)("a",{parentName:"p",href:"/VirtualClient/docs/guides/telemetry/"},"Telemetry")," to see how to setup automatic data upload pipeline.")),(0,i.kt)("h2",{id:"congratulations-"},"Congratulations !!"),(0,i.kt)("p",null,"You just benchmarked your system with OpenSSL."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"To benchmark your system's crypotography performance holisticaly, we recommend the full profile for OpenSSL: ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/microsoft/VirtualClient/blob/main/src/VirtualClient/VirtualClient.Main/profiles/PERF-CPU-OPENSSL.json"},(0,i.kt)("inlineCode",{parentName:"a"},"PERF-CPU-OPENSSL.json")))))}m.isMDXComponent=!0}}]);