"use strict";(self.webpackChunkvirtualclient=self.webpackChunkvirtualclient||[]).push([[4124],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>m});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=c(r),m=a,f=d["".concat(p,".").concat(m)]||d[m]||u[m]||o;return r?n.createElement(f,i(i({ref:t},s),{},{components:r})):n.createElement(f,i({ref:t},s))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},2672:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var n=r(7462),a=(r(7294),r(3905));const o={},i="HPCG Workload",l={unversionedId:"workloads/hpcg/HPCG",id:"workloads/hpcg/HPCG",title:"HPCG Workload",description:"HPCG is a software package that performs a fixed number of multigrid preconditioned (using a symmetric Gauss-Seidel smoother) conjugate gradient (PCG)",source:"@site/docs/workloads/hpcg/HPCG.md",sourceDirName:"workloads/hpcg",slug:"/workloads/hpcg/",permalink:"/VirtualClient/docs/workloads/hpcg/",draft:!1,editUrl:"https://github.com/microsoft/VirtualClient/edit/main/docs/workloads/hpcg/HPCG.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Graph500 Workload Profiles",permalink:"/VirtualClient/docs/workloads/graph500/Graph500profiles"},next:{title:"HPCG Workload Metrics",permalink:"/VirtualClient/docs/workloads/hpcg/HpcgMetrics"}},p={},c=[{value:"Setup",id:"setup",level:2},{value:"Supported Platforms",id:"supported-platforms",level:3},{value:"Package Dependencies",id:"package-dependencies",level:3}],s={toc:c};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"hpcg-workload"},"HPCG Workload"),(0,a.kt)("p",null,"HPCG is a software package that performs a fixed number of multigrid preconditioned (using a symmetric Gauss-Seidel smoother) conjugate gradient (PCG)\niterations using double precision (64 bit) floating point values."),(0,a.kt)("p",null,"The HPCG rating is is a weighted GFLOP/s (billion floating operations per second) value that is composed of the operations performed in the PCG iteration\nphase over the time taken. The overhead time of problem construction and any modifications to improve performance are divided by 500 iterations (the amortization weight)\nand added to the runtime."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://hpcg-benchmark.org/"},"HPCG Official Site")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/hpcg-benchmark/hpcg/"},"HPCG Github"),"  "),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/spack/spack"},"Spack Github"))),(0,a.kt)("h2",{id:"setup"},"Setup"),(0,a.kt)("p",null,"VirtualClient uses spack to install and load the HPCG binaries. Currently VirtualClient runs HPCG with openmpi support."),(0,a.kt)("p",null,"Example of VC's HPCG run script"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},". /home/vcvmadmin/VirtualClient/packages/spack/share/spack/setup-env.sh\nspack install --reuse -n -y hpcg %gcc +openmp target=zen2 ^openmpi@4.1.1\nspack load hpcg %gcc\nmpirun --np 4 --use-hwthread-cpus --allow-run-as-root\n")),(0,a.kt)("p",null,"Example of VC's hpcg.dat file"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"HPCG benchmark input file\nHPC Benchmarking team, Microsoft Azure\n104 104 104\n1800\n")),(0,a.kt)("h3",{id:"supported-platforms"},"Supported Platforms"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Linux x64"),(0,a.kt)("li",{parentName:"ul"},"Linux arm64")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"package-dependencies"},"Package Dependencies"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Spack Package Management")))}u.isMDXComponent=!0}}]);