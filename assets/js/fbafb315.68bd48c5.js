"use strict";(self.webpackChunkvirtualclient=self.webpackChunkvirtualclient||[]).push([[9992],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>u});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var o=r.createContext({}),p=function(e){var t=r.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},m=function(e){var t=p(e.components);return r.createElement(o.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,o=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),c=p(a),u=n,k=c["".concat(o,".").concat(u)]||c[u]||d[u]||l;return a?r.createElement(k,i(i({ref:t},m),{},{components:a})):r.createElement(k,i({ref:t},m))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,i=new Array(l);i[0]=c;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var p=2;p<l;p++)i[p]=a[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}c.displayName="MDXCreateElement"},9081:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var r=a(7462),n=(a(7294),a(3905));const l={},i="SPECviewperf Benchmark",s={unversionedId:"workloads/specview/specview",id:"workloads/specview/specview",title:"SPECviewperf Benchmark",description:"The SPECviewperf\xae 2020 v3.1 benchmark, released on August 4, 2022, is the worldwide standard for measuring graphics performance based on professional applications. The benchmark measures the 3D graphics performance of systems running under the OpenGL and DirectX application programming interfaces. The benchmark workloads are called viewsets, and represent graphics content and behavior from actual workstation-class applications, without the need to install the applications themselves.",source:"@site/docs/workloads/specview/specview.md",sourceDirName:"workloads/specview",slug:"/workloads/specview/",permalink:"/VirtualClient/docs/workloads/specview/",draft:!1,editUrl:"https://github.com/microsoft/VirtualClient/edit/main/website/docs/workloads/specview/specview.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"SPECpower Workload Profiles",permalink:"/VirtualClient/docs/workloads/specpower/specpower-profiles"},next:{title:"SPECviewperf Workload Profiles",permalink:"/VirtualClient/docs/workloads/specview/specview-profiles"}},o={},p=[{value:"What is Being Measured",id:"what-is-being-measured",level:2},{value:"System Requirements",id:"system-requirements",level:2},{value:"Benchmark License",id:"benchmark-license",level:2},{value:"Workload Metrics",id:"workload-metrics",level:2},{value:"Example Metrics",id:"example-metrics",level:3},{value:"Examples Metadata",id:"examples-metadata",level:3},{value:"Individual test scores",id:"individual-test-scores",level:4},{value:"Composite test scores",id:"composite-test-scores",level:4}],m={toc:p};function d(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"specviewperf-benchmark"},"SPECviewperf Benchmark"),(0,n.kt)("p",null,"The SPECviewperf\xae 2020 v3.1 benchmark, released on August 4, 2022, is the worldwide standard for measuring graphics performance based on professional applications. The benchmark measures the 3D graphics performance of systems running under the OpenGL and DirectX application programming interfaces. The benchmark workloads are called viewsets, and represent graphics content and behavior from actual workstation-class applications, without the need to install the applications themselves. "),(0,n.kt)("p",null,"Applications represented by viewsets in SPECviewperf 2020 include Autodesk 3ds Max and Maya for media and entertainment; Dassault Syst\xe8mes Catia and Solidworks, PTC Creo, and Siemens NX for CAD/CAM; and two datasets representing professional energy and medical applications."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://gwpg.spec.org/benchmarks/benchmark/specviewperf-2020-v3-1/"},"SPECviewperf 2020 v3.1"))),(0,n.kt)("h2",{id:"what-is-being-measured"},"What is Being Measured"),(0,n.kt)("p",null,"The benchmark measures the 3D graphics performance of systems running under the OpenGL and DirectX application programming interfaces."),(0,n.kt)("h2",{id:"system-requirements"},"System Requirements"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Microsoft Windows 10 Version 1709 (Fall Creators Update / RS3) or Windows 11 or newer"),(0,n.kt)("li",{parentName:"ul"},"16GB of system RAM or greater"),(0,n.kt)("li",{parentName:"ul"},"80GB of available disk space"),(0,n.kt)("li",{parentName:"ul"},"A minimum screen resolution of 1920\xd71080 for submissions published on the SPEC website\nOpenGL 4.5 (for catia-06, creo-03, energy-03, maya-06, medical-03, snx-04, and solidworks-07) and DirectX 12 API support (for 3dsmax-07)"),(0,n.kt)("li",{parentName:"ul"},"A GPU with 2GB or greater dedicated GPU memory (On systems without such GPUs, SPECview might still start, but benchmarking can take a very long time to complete)")),(0,n.kt)("h2",{id:"benchmark-license"},"Benchmark License"),(0,n.kt)("p",null,"The SPECviewperf 2020 benchmark is available for free downloading to everyone except for any for-profit entity that sells computers or computer  related products in the commercial marketplace, with the exception of SPEC/GWPG member companies (AMD, Dell, Fujitsu, HP Inc, Intel, Lenovo, Nvidia, VeriSilicon) that receive benchmark licenses as a membership benefit. Examples of those requiring a paid license include:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Computer hardware and software vendors"),(0,n.kt)("li",{parentName:"ul"},"Computer component manufacturers (hard drives, memory, device vendors)"),(0,n.kt)("li",{parentName:"ul"},"Computer-related service providers (for-profit resellers, distributors, consultants)"),(0,n.kt)("li",{parentName:"ul"},"Computer operating system companies")),(0,n.kt)("p",null,'Read more about licensing from the "Download" section of ',(0,n.kt)("a",{parentName:"p",href:"https://gwpg.spec.org/benchmarks/benchmark/specviewperf-2020-v3-1/"},"this page"),"."),(0,n.kt)("h2",{id:"workload-metrics"},"Workload Metrics"),(0,n.kt)("p",null,"The following metrics are examples of those captured by the Virtual Client when running the SPECview workload."),(0,n.kt)("h3",{id:"example-metrics"},"Example Metrics"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"MetricName"),(0,n.kt)("th",{parentName:"tr",align:null},"MetricValue"),(0,n.kt)("th",{parentName:"tr",align:null},"MetricUnit"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"3dsmax-07"),(0,n.kt)("td",{parentName:"tr",align:null},"312.31"),(0,n.kt)("td",{parentName:"tr",align:null},"fps")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"3dsmax-07"),(0,n.kt)("td",{parentName:"tr",align:null},"..."),(0,n.kt)("td",{parentName:"tr",align:null},"...")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"3dsmax-07"),(0,n.kt)("td",{parentName:"tr",align:null},"..."),(0,n.kt)("td",{parentName:"tr",align:null},"...")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"catia-06"),(0,n.kt)("td",{parentName:"tr",align:null},"31.31"),(0,n.kt)("td",{parentName:"tr",align:null},"fps")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"catia-06"),(0,n.kt)("td",{parentName:"tr",align:null},"..."),(0,n.kt)("td",{parentName:"tr",align:null},"...")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"catia-06"),(0,n.kt)("td",{parentName:"tr",align:null},"..."),(0,n.kt)("td",{parentName:"tr",align:null},"...")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"creo-03"),(0,n.kt)("td",{parentName:"tr",align:null},"87.12"),(0,n.kt)("td",{parentName:"tr",align:null},"fps")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"creo-03"),(0,n.kt)("td",{parentName:"tr",align:null},"..."),(0,n.kt)("td",{parentName:"tr",align:null},"...")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"creo-03"),(0,n.kt)("td",{parentName:"tr",align:null},"..."),(0,n.kt)("td",{parentName:"tr",align:null},"...")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"energy-03"),(0,n.kt)("td",{parentName:"tr",align:null},"78.54"),(0,n.kt)("td",{parentName:"tr",align:null},"fps")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"energy-03"),(0,n.kt)("td",{parentName:"tr",align:null},"..."),(0,n.kt)("td",{parentName:"tr",align:null},"...")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"energy-03"),(0,n.kt)("td",{parentName:"tr",align:null},"..."),(0,n.kt)("td",{parentName:"tr",align:null},"...")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"maya-06"),(0,n.kt)("td",{parentName:"tr",align:null},"790.21"),(0,n.kt)("td",{parentName:"tr",align:null},"fps")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"maya-06"),(0,n.kt)("td",{parentName:"tr",align:null},"..."),(0,n.kt)("td",{parentName:"tr",align:null},"...")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"maya-06"),(0,n.kt)("td",{parentName:"tr",align:null},"..."),(0,n.kt)("td",{parentName:"tr",align:null},"...")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"medical-03"),(0,n.kt)("td",{parentName:"tr",align:null},"76.93"),(0,n.kt)("td",{parentName:"tr",align:null},"fps")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"medical-03"),(0,n.kt)("td",{parentName:"tr",align:null},"..."),(0,n.kt)("td",{parentName:"tr",align:null},"...")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"medical-03"),(0,n.kt)("td",{parentName:"tr",align:null},"..."),(0,n.kt)("td",{parentName:"tr",align:null},"...")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"snx-04"),(0,n.kt)("td",{parentName:"tr",align:null},"87.12"),(0,n.kt)("td",{parentName:"tr",align:null},"fps")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"snx-04"),(0,n.kt)("td",{parentName:"tr",align:null},"..."),(0,n.kt)("td",{parentName:"tr",align:null},"...")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"snx-04"),(0,n.kt)("td",{parentName:"tr",align:null},"..."),(0,n.kt)("td",{parentName:"tr",align:null},"...")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"solidworks-07"),(0,n.kt)("td",{parentName:"tr",align:null},"10.23"),(0,n.kt)("td",{parentName:"tr",align:null},"fps")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"solidworks-07"),(0,n.kt)("td",{parentName:"tr",align:null},"..."),(0,n.kt)("td",{parentName:"tr",align:null},"...")))),(0,n.kt)("h3",{id:"examples-metadata"},"Examples Metadata"),(0,n.kt)("p",null,"More information can be found at the metric's metadata"),(0,n.kt)("h4",{id:"individual-test-scores"},"Individual test scores"),(0,n.kt)("p",null,"Individual test scores have weights and indices that are useful if users would like to see more detailed benchmark results.  "),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "weight": 10.0,\n  "index": 1,\n  "isCompositeScore": false\n}\n\n{\n  "weight": 10.0,\n  "index": 2,\n  "isCompositeScore": false\n}\n')),(0,n.kt)("h4",{id:"composite-test-scores"},"Composite test scores"),(0,n.kt)("p",null,"Each viewset also has a composite score, which is the weighted sum of the individual test scores. These composite scores have an index of -1 and a weight of 100%."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "weight": 100.0,\n  "index": -1,\n  "isCompositeScore": true\n}\n')))}d.isMDXComponent=!0}}]);