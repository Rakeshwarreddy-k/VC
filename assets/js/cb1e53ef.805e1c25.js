"use strict";(self.webpackChunkvirtualclient=self.webpackChunkvirtualclient||[]).push([[9075],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(r),f=o,d=c["".concat(s,".").concat(f)]||c[f]||m[f]||i;return r?n.createElement(d,a(a({ref:t},u),{},{components:r})):n.createElement(d,a({ref:t},u))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var p=2;p<i;p++)a[p]=r[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},9337:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var n=r(7462),o=(r(7294),r(3905));const i={},a="Virtual Client Monitor Profiles",l={unversionedId:"monitors/MonitorProfiles",id:"monitors/MonitorProfiles",title:"Virtual Client Monitor Profiles",description:"The following sections describe the various monitor profiles that are available with the Virtual Client application. Monitor profiles are used to",source:"@site/docs/monitors/MonitorProfiles.md",sourceDirName:"monitors",slug:"/monitors/MonitorProfiles",permalink:"/docs/monitors/MonitorProfiles",draft:!1,editUrl:"https://github.com/microsoft/VirtualClient/docs/monitors/MonitorProfiles.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Atop",permalink:"/docs/monitors/Atop"},next:{title:"Developing",permalink:"/docs/category/developing"}},s={},p=[{value:"MONITORS-NONE.json",id:"monitors-nonejson",level:3},{value:"MONITORS-DEFAULT.json",id:"monitors-defaultjson",level:3},{value:"MONITORS-AZURE-HOST.json",id:"monitors-azure-hostjson",level:3},{value:"MONITORS-PROFILING.json",id:"monitors-profilingjson",level:3}],u={toc:p};function m(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"virtual-client-monitor-profiles"},"Virtual Client Monitor Profiles"),(0,o.kt)("p",null,"The following sections describe the various monitor profiles that are available with the Virtual Client application. Monitor profiles are used to\ndefine the background monitors that will run on the system. Monitors are often ran in conjunction with workloads (defined in workload profiles) in\norder to capture performance and reliability information from the system while workloads are running."),(0,o.kt)("h3",{id:"monitors-nonejson"},"MONITORS-NONE.json"),(0,o.kt)("p",null,"Instructs the Virtual Client to not run any monitors at all."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'// Do not run any background monitors.\nVirtualClient.exe --profile=PERF-CPU-OPENSSL.json --profile=MONITORS-NONE.json --system=Azure --timeout=1440 --packageStore="{BlobConnectionString|SAS Uri}"\n')),(0,o.kt)("h3",{id:"monitors-defaultjson"},"MONITORS-DEFAULT.json"),(0,o.kt)("p",null,"The default monitor profile for the Virtual Client. This profile captures performance counters on the system using one or more different specialized\ntoolsets. This monitor profile will be used when no other monitor profiles are specified on the command line."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"./PerformanceCounterMetrics.md"},"Performance Counters")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"./AtopMonitor.md"},"Atop")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"./AzurePerfCollector.md"},"Azure Perf Collector")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"./AzureProfiler.md"},"Azure Profiler")," (not enabled by default)")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"OS/Architecture Platform Support"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Linux x64",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Capture performance counters using the Atop application."),(0,o.kt)("li",{parentName:"ul"},"Capture performance counters using the Azure Perf Collector application."))),(0,o.kt)("li",{parentName:"ul"},"Linux arm64",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Capture performance counters using the Atop application."),(0,o.kt)("li",{parentName:"ul"},"Capture performance counters using the Azure Perf Collector application."))),(0,o.kt)("li",{parentName:"ul"},"Windows x64",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Capture performance counters using the .NET SDK."))),(0,o.kt)("li",{parentName:"ul"},"Windows arm64",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Capture performance counters using the .NET SDK.")))))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'# Run the monitoring facilities only.\nVirtualClient.exe --profile=MONITORS-DEFAULT.json\n\n# Runs the default monitor profile.\nVirtualClient.exe --profile=PERF-CPU-OPENSSL.json --system=Azure --timeout=1440 --packageStore="{BlobConnectionString|SAS Uri}"\n\n# Monitor profile explicitly defined.\nVirtualClient.exe --profile=PERF-CPU-OPENSSL.json --profile=MONITORS-DEFAULT.json --system=Azure --timeout=1440 --packageStore="{BlobConnectionString|SAS Uri}"\n\n# Run the Azure Profiler on consistent intervals independent of the workload.\nVirtualClient.exe --profile=PERF-CPU-OPENSSL.json --system=Azure --timeout=1440 --packageStore="{BlobConnectionString|SAS Uri}" --parameters=ProfilingEnabled=true,,,ProfilingMode=Interval\n\n# Run the Azure Profiler on-demand when the workload signals.\nVirtualClient.exe --profile=PERF-CPU-OPENSSL.json --system=Azure --timeout=1440 --packageStore="{BlobConnectionString|SAS Uri}" --parameters=ProfilingEnabled=true,,,ProfilingMode=OnDemand\n')),(0,o.kt)("h3",{id:"monitors-azure-hostjson"},"MONITORS-AZURE-HOST.json"),(0,o.kt)("p",null,"Monitor profile tailored specifically for Azure host/blade scenarios. The monitors associated with this profile are designed to capture important information from\nthe operating system as well as from the physical hardware when running on a physical blade in the Azure fleet. This profile can ONLY be used on an Azure host/blade\nrunning a Windows/CloudOS operating system."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"./PerformanceCounterMetrics.md"},"Performance Counters"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"./AtopMonitor.md"},"Atop"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"https://msazure.visualstudio.com/One/_wiki/wikis/One%20Fleet%20Efficiency/54031/Platform-agnostic-BMC-APIs-for-Power-capping"},"IpmiUtil for Sensor Readings"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"OS/Architecture Platform Support")),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Windows x64",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Capture performance counters using the .NET SDK."),(0,o.kt)("li",{parentName:"ul"},"Capture temperature measurements for components/sensors on the system board of the physical host/blade."),(0,o.kt)("li",{parentName:"ul"},"Capture power usage measurements for components/sensors on the system board of the physical host/blade."),(0,o.kt)("li",{parentName:"ul"},"Capture important system events from the Windows 'System' event log."),(0,o.kt)("li",{parentName:"ul"},"Capture changes to the Windows registry."))),(0,o.kt)("li",{parentName:"ul"},"Windows arm64",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Capture performance counters using the .NET SDK."),(0,o.kt)("li",{parentName:"ul"},"Capture temperature measurements for components/sensors on the system board of the physical host/blade."),(0,o.kt)("li",{parentName:"ul"},"Capture power usage measurements for components/sensors on the system board of the physical host/blade."),(0,o.kt)("li",{parentName:"ul"},"Capture important system events from the Windows 'System' event log."),(0,o.kt)("li",{parentName:"ul"},"Capture changes to the Windows registry.")))))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'# Run the monitoring facilities only.\nVirtualClient.exe --profile=MONITORS-AZURE-HOST.json --system=Azure --timeout=1440\n\n# Run the monitoring facilities in conjunction with a set of workload operations.\nVirtualClient.exe --profile=PERF-CPU-OPENSSL.json --profile=MONITORS-AZURE-HOST.json --system=Azure --timeout=1440 --packageStore="{BlobConnectionString|SAS Uri}"\n')),(0,o.kt)("h3",{id:"monitors-profilingjson"},"MONITORS-PROFILING.json"),(0,o.kt)("p",null,"In addition to the default monitors, this profile enables system callstack information to be captured/profiled from the CPU registers. This provides a\ndeep diagnostics capability for all software operations happening on the system. The default behavior for the Azure Profiler is to run repeatedly on a set\nof intervals. The profile supports on-demand execution of the Azure Profiler as well when ran in conjunction with a workload profile that has integrated support\nfor the Azure Profiler during the exact points when workloads are running."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"./AzureProfiler.md"},"Azure Profiler"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"OS/Architecture Platform Support")),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Linux x64"),(0,o.kt)("li",{parentName:"ul"},"Linux arm64"),(0,o.kt)("li",{parentName:"ul"},"Windows x64"),(0,o.kt)("li",{parentName:"ul"},"Windows arm64",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Capture low-level callstack information from CPU registers using Azure Profiler."))))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Additional Requirements")),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"The Azure Profiler monitor supports the ability to upload .bin files to a Blob store. Supply the connection string or SAS URI to the Blob\nstore on the command line (e.g. --contentStore) to enable this feature.")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'# Run the monitoring facilities only.\nVirtualClient.exe --profile=MONITORS-PROFILING.json --system=Azure --timeout=1440 --contentStore="{BlobConnectionString|SAS Uri}"\n\n# Monitor profile explicitly defined.\nVirtualClient.exe --profile=PERF-NETWORKING.json --profile=MONITORS-PROFILING.json --system=Azure --timeout=1440 --packageStore="{BlobConnectionString|SAS Uri}" --contentStore="{BlobConnectionString|SAS Uri}"\n\n# Run profiling on-demand\nVirtualClient.exe --profile=PERF-NETWORKING.json --profile=MONITORS-PROFILING.json --system=Azure --timeout=1440 --packageStore="{BlobConnectionString|SAS Uri}" --contentStore="{BlobConnectionString|SAS Uri}" --parameters=OnDemandProfilingEnabled=true\n')))}m.isMDXComponent=!0}}]);