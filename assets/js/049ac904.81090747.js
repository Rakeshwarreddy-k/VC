"use strict";(self.webpackChunkvirtualclient=self.webpackChunkvirtualclient||[]).push([[8010],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=s(n),g=i,m=p["".concat(c,".").concat(g)]||p[g]||d[g]||o;return n?r.createElement(m,a(a({ref:t},u),{},{components:n})):r.createElement(m,a({ref:t},u))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=p;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var s=2;s<o;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},9209:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=n(7462),i=(n(7294),n(3905));const o={},a="Getting Started (Docker)",l={unversionedId:"guides/0003-getting-started-docker",id:"guides/0003-getting-started-docker",title:"Getting Started (Docker)",description:"In this document, we are going to run OpenSSL workload in a Docker Container.",source:"@site/docs/guides/0003-getting-started-docker.md",sourceDirName:"guides",slug:"/guides/0003-getting-started-docker",permalink:"/VirtualClient/docs/guides/0003-getting-started-docker",draft:!1,editUrl:"https://github.com/microsoft/VirtualClient/edit/main/website/docs/guides/0003-getting-started-docker.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Getting Started (Client/Server)",permalink:"/VirtualClient/docs/guides/0002-getting-started-client-server"},next:{title:"Command Line Options",permalink:"/VirtualClient/docs/guides/0010-command-line"}},c={},s=[{value:"Build container",id:"build-container",level:2},{value:"Start container",id:"start-container",level:2},{value:"Read console logs",id:"read-console-logs",level:2},{value:"Congratulations !!",id:"congratulations-",level:2}],u={toc:s};function d(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"getting-started-docker"},"Getting Started (Docker)"),(0,i.kt)("p",null,"In this document, we are going to run OpenSSL workload in a Docker Container."),(0,i.kt)("h2",{id:"build-container"},"Build container"),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"VirtualClient is planning on setting up a public container repository. At this moment you need to build VC docker images locally.")),(0,i.kt)("p",null,"VirtualClient keeps the ",(0,i.kt)("inlineCode",{parentName:"p"},"DockerFile")," in ",(0,i.kt)("inlineCode",{parentName:"p"},"src\\VirtualClient\\VirtualClient.Packaging\\dockerfiles\\")," directory. The following is an example command to build a docker image. You need to:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Build VirtualClient using ",(0,i.kt)("inlineCode",{parentName:"li"},"build.cmd")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"dotnet build"),"."),(0,i.kt)("li",{parentName:"ol"},"Build docker container using ",(0,i.kt)("inlineCode",{parentName:"li"},"docker build"),".")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"build.cmd\ndocker build -f src\\VirtualClient\\VirtualClient.Packaging\\dockerfiles\\win-x64.dockerfile -t test-win-x64:1.0.1.3 E:\\Source\\Github\\VirtualClient\n")),(0,i.kt)("p",null,"The build process could take a couple minutes."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"E:\\Source\\Github\\VirtualClient>docker build -f src\\VirtualClient\\VirtualClient.Packaging\\dockerfiles\\win-x64.dockerfile -t test-win-x64:1.0.1.3 E:\\Source\\Github\\VirtualClient\nSending build context to Docker daemon  2.788GB\nStep 1/3 : ARG REPO=mcr.microsoft.com/windows/nanoserver\nStep 2/3 : FROM ${REPO}:ltsc2022\nltsc2022: Pulling from windows/nanoserver\n38952155e2cd: Pull complete\nDigest: sha256:79fb1372fc5b3aeeca73603d5eadd0a8fb7d4f0b77bd29498696c03bb6de1fdf\nStatus: Downloaded newer image for mcr.microsoft.com/windows/nanoserver:ltsc2022\n ---\x3e 0db1879370e5\nStep 3/3 : COPY out/bin/Debug/x64/VirtualClient.Main/net6.0/win-x64/publish/ C:/VirtualClient/\n ---\x3e 7c2fe2466138\nSuccessfully built 7c2fe2466138\nSuccessfully tagged test-win-x64:1.0.1.3\n\nUse 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them\n")),(0,i.kt)("h2",{id:"start-container"},"Start container"),(0,i.kt)("p",null,"For Windows, the Dockerfile copied VC binaries to C:\\VirtualClient. You can invoke a docker container using the following commands."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},">docker run -d -p 3000:80 test-win-x64:1.0.1.3 C:\\VirtualClient\\VirtualClient.exe --profile=PERF-CPU-OPENSSL.json --packages=https://virtualclient.blob.core.windows.net/packages\nbad3c2a2fe95a3135264dc70ee63f89df7e1deb7875b3a0104b3231e248feaac\n")),(0,i.kt)("h2",{id:"read-console-logs"},"Read console logs"),(0,i.kt)("p",null,"You can check the container console logs to see if the workloads is running as expected."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},">docker logs bad3c2a2fe95a3135264dc70ee63f89df7e1deb7875b3a0104b3231e248feaac\n[12/22/2022 10:36:14 AM] Profile: Initialize\n[12/22/2022 10:36:14 AM] Profile: Install Dependencies\n[12/22/2022 10:36:14 AM] Profile: Dependency = DependencyPackageInstallation (scenario=InstallOpenSSLWorkloadPackage)\n[12/22/2022 10:36:25 AM] Profile: Execute Monitors\n[12/22/2022 10:36:25 AM] Profile: Monitor = PerfCounterMonitor (scenario=CaptureCounters)\n[12/22/2022 10:36:25 AM] Profile: Execute Actions\n[12/22/2022 10:36:25 AM] Profile: Action = OpenSslExecutor (scenario=MD5)\n[12/22/2022 10:46:25 AM] Profile: Action = OpenSslExecutor (scenario=SHA1)\n")),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"Since you can't easily access the VC metric files in containers, it is recommended to setup ",(0,i.kt)("a",{parentName:"p",href:"/VirtualClient/docs/guides/0040-telemetry"},"Telemetry")," to get automatic data upload.")),(0,i.kt)("h2",{id:"congratulations-"},"Congratulations !!"),(0,i.kt)("p",null,"You just benchmarked your system's container performance using VC in Docker."))}d.isMDXComponent=!0}}]);