"use strict";(self.webpackChunkvirtualclient=self.webpackChunkvirtualclient||[]).push([[5455],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),s=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(u.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,u=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=s(n),d=r,g=c["".concat(u,".").concat(d)]||c[d]||m[d]||i;return n?a.createElement(g,l(l({ref:t},p),{},{components:n})):a.createElement(g,l({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=c;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},1902:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const i={id:"getting-started",sidebar_position:1},l="Getting Started",o={unversionedId:"guides/getting-started",id:"guides/getting-started",title:"Getting Started",description:'In this document, we are going to run a "hello-world" version of VirtualClient: benchmark your system with CoreMark.',source:"@site/docs/guides/1-getting-started.md",sourceDirName:"guides",slug:"/guides/getting-started",permalink:"/VirtualClient/docs/guides/getting-started",draft:!1,editUrl:"https://github.com/microsoft/VirtualClient/edit/main/website/docs/guides/1-getting-started.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"getting-started",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Guides",permalink:"/VirtualClient/docs/category/guides"},next:{title:"Run monitors while benchmarking",permalink:"/VirtualClient/docs/guides/run-monitors"}},u={},s=[{value:"Installation",id:"installation",level:2},{value:"<em>NuGet package</em>",id:"nuget-package",level:4},{value:"<em>Build yourself</em>",id:"build-yourself",level:4},{value:"Run a simple VC profile",id:"run-a-simple-vc-profile",level:2},{value:"Read results and logs",id:"read-results-and-logs",level:2},{value:"Congratulations !!",id:"congratulations-",level:2}],p={toc:s};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"getting-started"},"Getting Started"),(0,r.kt)("p",null,'In this document, we are going to run a "hello-world" version of VirtualClient: benchmark your system with CoreMark.'),(0,r.kt)("admonition",{type:"danger"},(0,r.kt)("p",{parentName:"admonition"},"You are here about one week early. Some of the features might not work. ",(0,r.kt)("br",null),"\nThis is an MSFT inner source project we are migrating to GitHub and open source. Please make sure to bookmark and come back later.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("h4",{id:"nuget-package"},(0,r.kt)("em",{parentName:"h4"},"NuGet package")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"VirtualClient NuGet Package is at ",(0,r.kt)("a",{parentName:"li",href:"https://www.nuget.org/packages/VirtualClient"},"https://www.nuget.org/packages/VirtualClient"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-powershell"},"PM> NuGet\\Install-Package VirtualClient -Version 0.0.2\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"You could optionally download directly from NuGet ",(0,r.kt)("a",{parentName:"li",href:"https://www.nuget.org/api/v2/package/VirtualClient/0.0.2"},"https://www.nuget.org/api/v2/package/VirtualClient/0.0.2")),(0,r.kt)("li",{parentName:"ul"},"VC executable could be find in those paths")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-treeview"},"VirtualClient/\n\u251c\u2500\u2500 content/\n|   \u251c\u2500\u2500 linux-arm64\n|   |   \u2514\u2500\u2500 VirtualClient\n|   \u251c\u2500\u2500 linux-x64\n|   |   \u2514\u2500\u2500 VirtualClient\n|   \u251c\u2500\u2500 win-arm64\n|   |   \u2514\u2500\u2500 VirtualClient.exe\n|   \u2514\u2500\u2500 win-x64\n|       \u2514\u2500\u2500 VirtualClient.exe\n\u2514\u2500\u2500 etc.\n")),(0,r.kt)("h4",{id:"build-yourself"},(0,r.kt)("em",{parentName:"h4"},"Build yourself")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"You need to ",(0,r.kt)("a",{parentName:"li",href:"https://dotnet.microsoft.com/en-us/download/dotnet/6.0"},"install .Net SDK 6.0.X")),(0,r.kt)("li",{parentName:"ul"},"Use build script at the root of the repo build.cmd")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"build.cmd\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"You will find VC binary in corresponding arch/runtimes folder. ")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"VirtualClient\\out\\bin\\Debug\\ARM64\\VirtualClient.Main\\net6.0\\linux-arm64\\publish\\VirtualClient\nVirtualClient\\out\\bin\\Debug\\ARM64\\VirtualClient.Main\\net6.0\\win-arm64\\publish\\VirtualClient.exe\nVirtualClient\\out\\bin\\Debug\\x64\\VirtualClient.Main\\net6.0\\linux-x64\\publish\\VirtualClient\nVirtualClient\\out\\bin\\Debug\\x64\\VirtualClient.Main\\net6.0\\win-x64\\publish\\VirtualClient.exe\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"VirtualClient is a self-contained .NET app. When you use VC, you need to copy over the entire ",(0,r.kt)("inlineCode",{parentName:"li"},"/publish/")," folder")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"run-a-simple-vc-profile"},"Run a simple VC profile"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Execute this command")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"VirtualClient --profile=PERF-CPU-COREMARK.json --profile=MONITORS-NONE.json --iterations=1\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--profile=PERF-CPU-COREMARK.json")," tells VC to run a CoreMark benchmark"),(0,r.kt)("li",{parentName:"ul"},"VirtualClient has a default profile, ",(0,r.kt)("inlineCode",{parentName:"li"},"--profile=MONITORS-NONE.json")," overrides that behavior in this one-time run."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--iteration=1")," Tells VC to run this profile once. Default behavior is to run profiles repetatively until timeout.")),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"In this profile, VC will install gcc-9 and other development tools, and set gcc-9 as default compiler in your system.",(0,r.kt)("br",null),"\nIf prefered, run in a Virtual Machine to avoid those changes to your system.")),(0,r.kt)("h2",{id:"read-results-and-logs"},"Read results and logs"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"You will find three local files under directory ",(0,r.kt)("inlineCode",{parentName:"li"},"/vc/logs/"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"logs\n\u251c\u2500\u2500 events-20221109.log\n\u251c\u2500\u2500 metrics-20221109.log\n\u2514\u2500\u2500 traces-20221109.log\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Metrics.log contains the Metrics captured by the benchmark. Columns ",(0,r.kt)("inlineCode",{parentName:"li"},"metricName"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"metricValue"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"metricUnit")," contain some of the most important information\nfrom a benchmark run.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:"{16,18,19}","{16,18,19}":!0},'{\n    "timestamp": "2022-11-09T04:09:59.3573706+00:00",\n    "level": "Information",\n    "message": "CoreMark.ScenarioResult",\n    "agentId": "ExampleClient",\n    "appVersion": "1.6.0.0",\n    "clientId": "ExampleClient",\n    "executionProfileName": "PERF-CPU-COREMARK.json",\n    "executionProfilePath": "/home/vcvmadmin/vc/profiles/PERF-CPU-COREMARK.json",\n    "executionSystem": null,\n    "experimentId": "3a225222-f834-4101-8a81-219a1f4e9587",\n    "metadata": {"experimentId":"3a225222-f834-4101-8a81-219a1f4e9587","agentId":"ExampleClient"},\n    "metricCategorization": "",\n    "metricDescription": "",\n    "metricMetadata": {},\n    "metricName": "Iterations/Sec",\n    "metricRelativity": "HigherIsBetter",\n    "metricUnit": "iterations/sec",\n    "metricValue": 93187.139894,\n    "parameters": {"scenario":"ScoreSystem","packageName":"coremark","profileIteration":1,"profileIterationStartTime":"2022-11-09T04:09:22.3729518Z"},\n    "platformArchitecture": "linux-arm64",\n    "scenarioArguments": "XCFLAGS=\\"-DMULTITHREAD=4 -DUSE_PTHREAD\\" REBUILD=1 LFLAGS_END=-pthread",\n    "etc": ...\n}\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Traces contains the Messages that VirtualClient logs.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},'Messages like "BenchmarkStart", "BenchmarkStop"'),(0,r.kt)("li",{parentName:"ul"},"Raw output from processes"),(0,r.kt)("li",{parentName:"ul"},"More information logged by VC"))),(0,r.kt)("li",{parentName:"ul"},"Events contains system informations or important system events.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Output from tools like uname, lscpu, lspci")))),(0,r.kt)("admonition",{title:"Reading logs is tedious?",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"VC is designed for large scale perf testing. Check ","[Telemetry-TODO]"," to see how to setup automatic data upload pipeline.")),(0,r.kt)("h2",{id:"congratulations-"},"Congratulations !!"),(0,r.kt)("p",null,"You just benchmarked your system with CoreMark."))}m.isMDXComponent=!0}}]);