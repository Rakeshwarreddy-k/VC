"use strict";(self.webpackChunkvirtualclient=self.webpackChunkvirtualclient||[]).push([[5675],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(n),m=i,v=p["".concat(s,".").concat(m)]||p[m]||d[m]||o;return n?r.createElement(v,a(a({ref:t},c),{},{components:n})):r.createElement(v,a({ref:t},c))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var u=2;u<o;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},4947:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var r=n(7462),i=(n(7294),n(3905));const o={id:"server-client",sidebar_position:3},a="Run client -> server workloads",l={unversionedId:"guides/server-client/server-client",id:"guides/server-client/server-client",title:"Run client -> server workloads",description:"In this document, we are going to run a Redis workload, where server and client are on different systems.",source:"@site/docs/guides/3-server-client/3-server-client.md",sourceDirName:"guides/3-server-client",slug:"/guides/server-client/",permalink:"/VirtualClient/docs/guides/server-client/",draft:!1,editUrl:"https://github.com/microsoft/VirtualClient/edit/main/website/docs/guides/3-server-client/3-server-client.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"server-client",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Run monitors while benchmarking",permalink:"/VirtualClient/docs/guides/run-monitors"},next:{title:"Environment Layouts Json",permalink:"/VirtualClient/docs/guides/server-client/environment-layout"}},s={},u=[{value:"Environment Setup",id:"environment-setup",level:2},{value:"Run Redis Benchmark",id:"run-redis-benchmark",level:2},{value:"Read results and logs",id:"read-results-and-logs",level:2},{value:"Congratulations !!",id:"congratulations-",level:2}],c={toc:u};function d(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"run-client---server-workloads"},"Run client -> server workloads"),(0,i.kt)("p",null,"In this document, we are going to run a Redis workload, where server and client are on different systems."),(0,i.kt)("h2",{id:"environment-setup"},"Environment Setup"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"You need two systems that are in the same subnet/internet and able to see each other. "),(0,i.kt)("li",{parentName:"ol"},"You need an ",(0,i.kt)("a",{parentName:"li",href:"/VirtualClient/docs/guides/server-client/environment-layout"},(0,i.kt)("strong",{parentName:"a"},"EnvironmentLayout Json"))," file in both systems. This file has three information: ",(0,i.kt)("inlineCode",{parentName:"li"},"clientId"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"ipAdress")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"role"),"."),(0,i.kt)("li",{parentName:"ol"},"In this example, client runs on ",(0,i.kt)("inlineCode",{parentName:"li"},"10.1.0.1"),", server runs on ",(0,i.kt)("inlineCode",{parentName:"li"},"10.1.0.2"),". The layout looks like this.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "clients": [\n        {\n            "name": "TestClient",\n            "role": "Client",\n            "privateIPAddress": "10.1.0.1"\n        },\n        {\n            "name": "TestServer",\n            "role": "Server",\n            "privateIPAddress": "10.1.0.2"\n        }\n    ]\n}\n')),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"Wonder why not just use a ",(0,i.kt)("em",{parentName:"p"},"--serverIpAddress")," like other tools? Great question.",(0,i.kt)("br",null),"\nAn environment json will give every client download about their role and other clients' roles. This enables VC to do complex multi-role workloads, like NGINX with server, client and reverse proxy.")),(0,i.kt)("h2",{id:"run-redis-benchmark"},"Run Redis Benchmark"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Run this command on both server and client",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"One benefit of using a EnvironmentLayout file vs. server ipAddress, is that on all VC instances with difference roles, you can use the exact same command.")))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"sudo ./VirtualClient --clientId=TestClient --profile=PERF-REDIS.json --profile=MONITORS-NONE.json --iterations=1 --packages=https://virtualclient.blob.core.windows.net\n/packages --layoutPath=layout.json\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"(WIP)")),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"In this profile, VC will download Redis and install Redis server.",(0,i.kt)("br",null),"\nIf prefered, run in a Virtual Machine to avoid those changes to your system.")),(0,i.kt)("h2",{id:"read-results-and-logs"},"Read results and logs"),(0,i.kt)("h2",{id:"congratulations-"},"Congratulations !!"),(0,i.kt)("p",null,"You just ran a multi-role workload and benchmark your system with Redis."))}d.isMDXComponent=!0}}]);